{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","minHeight","maxHeight","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","meta","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","succesProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","lenghth","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","varient","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"gLACaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC9BnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAC7BC,EAA2B,2BCJ3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCQ7BC,GAAUC,0BAAgB,CAE5BC,YCN8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAGpE,OAAQA,EAAOC,MACX,KAAKjF,EACD,MAAO,CAAEkF,SAAS,EAAMH,SAAU,IACtC,KAAK9E,EACD,MAAO,CACHiF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAE7B,KAAKnF,EACD,MAAO,CAAEgF,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDTfS,eCciC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCAGnF,OAAQA,EAAOC,MACX,KAAK9E,EAED,OAAO,aAAE+E,SAAS,GAASJ,GAC/B,KAAK1E,EACD,MAAO,CAAE8E,SAAS,EAAOM,QAASR,EAAOG,SAC7C,KAAK9E,EACD,MAAO,CAAE6E,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDzBfY,cC8BgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK3E,EACD,MAAO,CAAE4E,SAAS,GACtB,KAAK3E,EACD,MAAO,CAAE2E,SAAS,EAAOS,SAAS,GACtC,KAAKnF,EACD,MAAO,CAAE0E,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDtCfc,cC0CgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKxE,EACD,MAAO,CAAEyE,SAAS,GACtB,KAAKxE,EACD,MAAO,CAAEwE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAKxE,EACD,MAAO,CAAEuE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKvE,EACD,MAAO,GACX,QACI,OAAOkE,IDpDfe,cCwDgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKpE,EACD,MAAO,CAAEqE,SAAS,GACtB,KAAKpE,EAED,MAAO,CAAEoE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAKpE,EACD,MAAO,CAAEmE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKnE,EACD,MAAO,CAAEwE,QAAS,IACtB,QACI,OAAOV,IDnEfgB,oBCuEsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKhE,EACD,MAAO,CAAEiE,SAAS,GACtB,KAAKhE,EACD,MAAO,CAAEgE,SAAS,EAAOS,SAAS,GACtC,KAAKxE,EACD,MAAO,CAAE+D,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK/D,EACD,MAAO,GACX,QACI,OAAO0D,IDjFfiB,gBCqFkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK5D,EACD,MAAO,CAAE6D,SAAS,EAAMH,SAAU,IACtC,KAAKzD,EACD,MAAO,CAAE4D,SAAS,EAAOH,SAAUC,EAAOG,SAC9C,KAAK5D,EACD,MAAO,CAAE2D,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ID5FfkB,KEpCuB,WAGrB,IAFFlB,EAEC,uDAFO,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACC,uCACD,OAAOA,EAAOC,MACV,KAAKzD,EACD,IAAM2E,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAGY,EACQ,2BACAtB,EAAMmB,WADb,IAGIA,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAAIA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAI1E,2BACAxB,GADP,IAGImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAG5C,KAAK1E,EACD,OAAO,2BACAqD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAEtE,KAAKzD,EACD,OAAO,2BACAoD,GADP,IAGIoB,gBAAiBlB,EAAOG,UAEhC,KAAKxD,EACD,OAAO,2BACAmD,GADP,IAGI2B,cAAezB,EAAOG,UAE9B,QACI,OAAOL,IFJf4B,UGd4B,WAA0B,IAAzB5B,EAAwB,uDAAhB,GAAKE,EAAW,uCAErD,OAAQA,EAAOC,MACX,KAAKrD,EACD,MAAO,CAAEsD,SAAS,GACtB,KAAKrD,EACD,MAAO,CAAEqD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKrD,EACD,MAAO,CAAEoD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKpD,EACD,MAAO,GACX,QACI,OAAO+C,IHGf8B,aGC+B,WAA0B,IAAzB9B,EAAwB,uDAAhB,GAAKE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKjD,EACD,MAAO,CAAEkD,SAAS,GACtB,KAAKjD,EACD,MAAO,CAAEiD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKjD,EACD,MAAO,CAAEgD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHTf+B,YGa8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK9C,EACD,OAAO,2BAAK2C,GAAZ,IAAmBI,SAAS,IAChC,KAAK9C,EACD,MAAO,CAAE8C,SAAS,EAAO4B,KAAM9B,EAAOG,SAC1C,KAAK9C,EACD,MAAO,CAAE6C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK7C,EACD,MAAO,CAAEwE,KAAM,IACnB,QACI,OAAOhC,IHvBfiC,kBG2BoC,WAA0B,IAAzBjC,EAAwB,uDAAhB,GAAKE,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAK1C,EACD,MAAO,CAAE2C,SAAS,GACtB,KAAK1C,EACD,MAAO,CAAE0C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC7D,KAAK1C,EACD,MAAO,CAAEyC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKzC,GACD,MAAO,GACX,QACI,OAAOoC,IHtCfkC,SG0C2B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKtC,GACD,MAAO,CAAEuC,SAAS,GACtB,KAAKtC,GACD,MAAO,CAAEsC,SAAS,EAAO+B,MAAOjC,EAAOG,SAC3C,KAAKtC,GACD,MAAO,CAAEqC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKrC,GACD,MAAO,CAAEmE,MAAO,IACpB,QACI,OAAOnC,IHpDfoC,WGwD6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKlC,GACD,MAAO,CAAEmC,SAAS,GACtB,KAAKlC,GACD,MAAO,CAAEkC,SAAS,EAAOS,SAAS,GACtC,KAAK1C,GACD,MAAO,CAAEiC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHhEfqC,WGoE6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAK/B,GACD,MAAO,CAAEgC,SAAS,GACtB,KAAK/B,GACD,MAAO,CAAE+B,SAAS,EAAOS,SAAS,GACtC,KAAKvC,GACD,MAAO,CAAE8B,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK9B,GACD,MAAO,CAAEyD,KAAM,IACnB,QACI,OAAOhC,IH7EfsC,YI7B8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCAEtD,OAAQA,EAAOC,MACX,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAEjB,KAAK3B,GACD,MAAO,CACH2B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAEtB,KAAK3B,GACD,MAAO,CACH0B,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJWfwC,aIP+B,WAG7B,IAFFxC,EAEC,uDAFO,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAC1DlB,EACC,uCAED,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAEjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACTmC,MAAOrC,EAAOG,SAEtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJdf0C,SIkB2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCAEnD,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAEjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAEjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKpB,GACD,MAAO,GACX,QACI,OAAOe,IJrCf2C,aIyC+B,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCAEvD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CACHW,SAAS,GAEjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKT,GACD,MAAO,GACX,QACI,OAAOI,IJ5Df4C,YIgE8B,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAElE,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAEjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKhB,GACD,MAAO,CACHwD,OAAQ,IAEhB,QACI,OAAO7C,IJrFf8C,UIyF4B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAEhE,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAEjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,MJxGb+C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAEEG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAMEI,GAAe,CACjBnC,KAAM,CACJC,UAAW4B,GACX3B,gBAP+B4B,aAAaC,QAAQ,mBACtDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOArB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAQLC,GANDC,sBACV5D,GACAwD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,oHKhD5BM,GAlCG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEjB,EAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACI,gBAACC,GAAA,EAAD,CAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAECL,EAAQM,OACPR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAKcC,QAAM,EAArC,UACI,eAACN,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACLsE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,qBACZC,UAAU,oBAEd,eAACC,GAAA,EAAD,CACI5E,KAAK,SACL6E,QAAQ,kBACRF,UAAU,MAHd,wB,gDC6FCG,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLhF,KAAM9C,IAHoB,EAOM+H,IAAfvD,EAPS,EAOtBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAbZ,SAiBPC,KAAMC,IAAN,qBACLT,GACdI,GAnB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAKRT,EAAS,CACLhF,KAAM7C,EACN+C,QAASuF,IAxBiB,kDA4B9BT,EAAS,CACLhF,KAAM5C,EACN8C,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCc,0DAAR,yDChDfC,GAhEA,WACX,IAAMZ,EAAWa,cAGTnE,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAMR,OACA,kCACI,eAACqE,GAAA,EAAD,CAAQC,GAAG,OAAOnB,QAAQ,OAAOoB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,wBAEJ,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiBzB,GAAG,mBAApB,UACI,eAAC,KAAD,CAAO0B,OAAQ,gBAAG/C,EAAH,EAAGA,QAAH,OAAiB,eAAC,GAAD,CAAWA,QAASA,OACxD,gBAACgD,GAAA,EAAD,CAAK/B,UAAU,UAAf,UACI,eAAC,iBAAD,CAAeyB,GAAG,QAAlB,SACI,gBAACM,GAAA,EAAIC,KAAL,WAAW,oBAAGhC,UAAU,yBAAxB,YAGHjD,EACG,gBAACkF,GAAA,EAAD,CAAaC,MAAOnF,EAAS4C,KAAMS,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAeqB,GAAG,WAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wBAIJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QA1BpB,WAClB/B,GDqDoB,SAACA,GAEzBnC,aAAamE,WAAW,YACxBhC,EAAS,CAAEhF,KAAMlD,IACjBkI,EAAS,CAAEhF,KAAM3C,IACjB2H,EAAS,CAAEhF,KAAMd,KACjB8F,EAAS,CAAEhF,KAAMnC,SClCO,uBAKJ,eAAC,iBAAD,CAAeuI,GAAG,SAAlB,SACI,gBAACM,GAAA,EAAIC,KAAL,WACI,oBAAGhC,UAAU,gBADjB,eAKPjD,GAAYA,EAASuF,SAClB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,YAA9B,UACI,eAAC,iBAAD,CAAeqB,GAAG,kBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,sBAEJ,eAAC,iBAAD,CAAeV,GAAG,qBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,yBAEJ,eAAC,iBAAD,CAAeV,GAAG,mBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wC,mBC3CjBI,GAdA,WACX,OACI,kCACI,eAACf,GAAA,EAAD,UACI,eAACgB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKzC,UAAU,mBAAf,2C,UCLd0C,GAAS,SAAC,GAA4B,IAA1B5C,EAAyB,EAAzBA,MAAO6C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,uBAAK5C,UAAU,SAAf,UACI,gCACI,oBAAG6C,MAAO,CAACD,SACT5C,UACEF,GAAS,EACL,cACAA,GAAS,GACT,uBACA,kBAIZ,gCACI,oBAAG+C,MAAO,CAACD,SACT5C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIZ,gCACI,oBAAG+C,MAAO,CAACD,SACT5C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIZ,gCACI,oBAAG+C,MAAO,CAACD,SACT5C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIZ,gCACI,oBAAG+C,MAAO,CAACD,SACT5C,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIZ,gCAAO6C,GAAQA,QAK3BD,GAAOI,aAAe,CAClBF,MAAO,WASIF,UC1CAK,GA7BC,SAAC,GAAiB,IAAfnH,EAAc,EAAdA,QACf,OAEI,eADA,CACCoH,GAAA,EAAD,CAAMhD,UAAU,mBAAmB6C,MAAO,CAAEI,UAAW,QAASC,UAAW,SAA3E,UACI,eAAC,QAAD,CAAMzB,GAAE,mBAAc7F,EAAQuH,KAA9B,SACI,eAACH,GAAA,EAAKI,IAAN,CAAUC,IAAKzH,EAAQ0H,MAAOpD,QAAQ,UAG1C,gBAAC8C,GAAA,EAAKO,KAAN,WACI,eAAC,QAAD,CAAM9B,GAAE,mBAAc7F,EAAQuH,KAA9B,SACI,eAACH,GAAA,EAAKQ,MAAN,CAAYC,GAAG,MAAf,SACI,kCAAS7H,EAAQ+D,WAIzB,eAACqD,GAAA,EAAKU,KAAN,CAAWD,GAAG,MAAd,SACI,eAAC,GAAD,CACI3D,MAAOlE,EAAQ+H,OACfhB,KAAI,UAAK/G,EAAQgI,WAAb,gBAIZ,gBAACZ,GAAA,EAAKU,KAAN,CAAWD,GAAG,KAAd,cAAqB7H,EAAQiI,gB,UCxBvCC,GAAU,SAAC,GAA2B,IAAzB5D,EAAwB,EAAxBA,QAAS6D,EAAe,EAAfA,SACxB,OACI,eAACC,GAAA,EAAD,CAAO9D,QAASA,EAAhB,SACK6D,KAKbD,GAAQhB,aAAe,CACnB5C,QAAS,QAGE4D,U,UCKAG,GAjBA,WACX,OACI,eAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLvB,MAAO,CACHwB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPf,SAUI,uBAAMxE,UAAU,UAAhB,2B,UCWGyE,GAtBE,SAAC,GAAgD,IAA9CjJ,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,KAAsC,IAAhC6G,eAAgC,aAAjBrD,eAAiB,MAAT,GAAS,EAC7D,OAAOzD,EAAQ,GACX,eAACkJ,GAAA,EAAD,UACK,YAAIC,MAAMnJ,GAAOoJ,QAAQjI,KAAI,SAAAD,GAAC,OAC3B,eAAC,iBAAD,CAEA+E,GACKa,EAAD,6BAI4B5F,EAAI,GAH1BuC,EAAO,kBACQA,EADR,iBACwBvC,EAAE,GAD1B,gBAEMA,EAAI,GAN3B,SAUI,eAACgI,GAAA,EAAWvC,KAAZ,CAAiB0C,OAAQnI,EAAI,IAAMjB,EAAnC,SAA0CiB,EAAI,KAT7CA,EAAI,S,oBCmBZoI,GAAe,eAAC7F,EAAD,uDAAW,GAAI8F,EAAf,uDAA4B,GAA5B,gDAAmC,WAAO1E,GAAP,kBAAAE,EAAA,sEAEvDF,EAAS,CAAEhF,KAAMjF,IAFsC,SAKhCwK,KAAMC,IAAN,gCAAmC5B,EAAnC,uBAAyD8F,IALzB,gBAK/CjE,EAL+C,EAK/CA,KAERT,EAAS,CACLhF,KAAMhF,EACNkF,QAASuF,IAT0C,gDAYvDT,EAAS,CACLhF,KAAM/E,EACNiF,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjBuC,yDAAnC,uDAsBfgE,GAAqB,SAAC5E,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAEhF,KAAM9E,IAFiB,SAMXqK,KAAMC,IAAN,wBAA2BT,IANhB,gBAM1BU,EAN0B,EAM1BA,KAERT,EAAS,CACLhF,KAAM7E,EACN+E,QAASuF,IAVqB,gDAalCT,EAAS,CACLhF,KAAM5E,EACN8E,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlBkB,yDAAR,uDChBnBiE,GA1BS,WACpB,IAAM5E,EAAWa,cAEX/E,EAAkBgF,aAAY,SAAAjG,GAAK,OAAIA,EAAMiB,mBAC3Cb,EAA8Ba,EAA9Bb,QAASI,EAAqBS,EAArBT,MAAOP,EAAcgB,EAAdhB,SAMxB,OAJA+J,qBAAU,WACN7E,ED+KuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAEhF,KAAM5D,IAFY,SAINmJ,KAAMC,IAAN,qBAJM,gBAIrBC,EAJqB,EAIrBA,KAERT,EAAS,CACLhF,KAAM3D,EACN6D,QAASuF,IARgB,gDAW7BT,EAAS,CACLhF,KAAM1D,EACN4D,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhBa,yDAAN,yDC9KxB,CAACX,IAEG/E,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAC7D,eAACyJ,GAAA,EAAD,CAAUC,MAAM,QAAOpF,UAAU,UAAjC,SACK7E,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAACuJ,GAAA,EAAShD,KAAV,UACI,gBAAC,QAAD,CAAMV,GAAE,mBAAc7F,EAAQuH,KAA9B,UACI,eAACkC,GAAA,EAAD,CAAOhC,IAAKzH,EAAQ0H,MAAOgC,IAAK1J,EAAQ+D,KAAM4F,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkBxF,UAAU,mBAA5B,SACI,gCAAKpE,EAAQ+D,KAAb,MAAsB/D,EAAQiI,MAA9B,aAJQjI,EAAQuH,W,SClBtCsC,GAAO,SAAC,GAAsC,IAApCvD,EAAmC,EAAnCA,MAAOwD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,OACI,gBAACC,GAAA,EAAD,WACI,iCAAQ1D,IACR,uBAAMvC,KAAK,cAAckG,KAAMH,IAC/B,uBAAM/F,KAAK,WAAWkG,KAAMF,QAKxCF,GAAK3C,aAAe,CAChBZ,MAAO,qBACPwD,YAAa,sCACbC,SAAU,mDAGCF,UC2DAK,GAhEI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAgBZ9G,EAAU8G,EAAMC,OAAO/G,QAEvB8F,EAAagB,EAAMC,OAAOjB,YAAc,EAExC1E,EAAWa,cAEXjG,EAAckG,aAAY,SAACjG,GAAD,OAAWA,EAAMD,eAE1CK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAOxC,OALAyJ,qBAAU,WACN7E,EAASyE,GAAa7F,EAAS8F,MAEhC,CAAC1E,EAAUpB,EAAS8F,IAGnB,uCACA,eAAC,GAAD,IAME9F,EAAgC,eAAC,QAAD,CAAMwC,GAAG,IAAIzB,UAAU,gBAAvB,qBAAtB,eAAC,GAAD,IACR,kDACC1E,EAAU,eAAC,GAAD,IACTI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAErC,uCACI,eAAC8G,GAAA,EAAD,UACCrH,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAAC6G,GAAA,EAAD,CAAuBwD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAASxK,QAASA,KADZA,EAAQuH,UAKtB,eAAC,GAAD,CACI3H,MAAOA,EACPC,KAAMA,EAENwD,QAASA,GAAoB,Y,UCyJlCoH,GAnNO,SAAC,GAAwB,IAAtBtH,EAAqB,EAArBA,QAASgH,EAAY,EAAZA,MAI9B,EAAsB/G,mBAAS,GAA/B,oBAAOsH,EAAP,KAAYC,EAAZ,KACA,EAA4BvH,mBAAS,GAArC,oBAAO2E,EAAP,KAAe6C,EAAf,KACA,EAA8BxH,mBAAS,IAAvC,oBAAOyH,EAAP,KAAgBC,EAAhB,KAEMrG,EAAWa,cAGTnE,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFpB,EAAiBwF,aAAY,SAAAjG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBM,EAAsBiF,aAAY,SAAAjG,GAAK,OAAIA,EAAMgB,uBACtCyK,EAAkDzK,EAA3DH,QAAqC6K,EAAsB1K,EAA7BR,MAEtCwJ,qBAAU,WAUHyB,IAECE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACXrG,EAAS,CAAEhF,KAAM7D,KAErB6I,EAAS2E,GAAmBe,EAAMC,OAAO5F,OAE1C,CAACC,EAAU0F,EAAOY,IAgBrB,OACI,uCACI,eAAC,QAAD,CAAM3G,UAAU,qBAAqByB,GAAG,IAAxC,qBAGCnG,EACG,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,uCACA,eAAC,GAAD,CAAMwG,MAAOtG,EAAQ+D,OACjB,gBAAC6C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAKzH,EAAQ0H,MAAOgC,IAAK1J,EAAQ+D,KAAM4F,OAAK,MAEvD,eAAC9C,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAU3E,KAAX,UACI,8BAAKvG,EAAQ+D,SAEjB,eAACmH,GAAA,EAAU3E,KAAX,UACI,eAAC,GAAD,CACIrC,MAAOlE,EAAQ+H,OACnBhB,KAAI,UAAK/G,EAAQgI,WAAb,gBAGR,gBAACkD,GAAA,EAAU3E,KAAX,sBACavG,EAAQiI,SAErB,gBAACiD,GAAA,EAAU3E,KAAX,2BACkBvG,EAAQ8J,oBAIlC,eAACjD,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACI,wCAAU7G,EAAQiI,gBAI9B,eAACiD,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACC7G,EAAQmL,aAAe,EAAI,WAAa,sBAKhDnL,EAAQmL,aAAe,GACxB,eAACD,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UACI,eAACtD,GAAA,EAAKO,QAAN,CACI+D,GAAG,SACH3D,MAAOwG,EACP1G,SAAU,SAACP,GAAD,OAAOkH,EAAOlH,EAAEQ,OAAOC,QAHrC,SAKK,YAAI6E,MAAM/I,EAAQmL,cAAcnC,QAAQjI,KACrC,SAACD,GAAD,OACI,yBAAoBoD,MAAOpD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAWzC,eAACoK,GAAA,EAAU3E,KAAX,UACI,eAAClC,GAAA,EAAD,CACAmC,QA7FX,WAErBrD,EAAQS,KAAR,gBAAsBuG,EAAMC,OAAO5F,GAAnC,eAA4CkG,KA4FZtG,UAAU,YACV3E,KAAK,SACL2L,SAAmC,IAAzBpL,EAAQmL,aAJlB,qCAapB,eAACvE,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,0CAC6B,IAA5BtK,EAAQC,QAAQoL,SAAiB,eAAC,GAAD,yBAClC,gBAACH,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACKtE,EAAQC,QAAQc,KAAI,SAAAuK,GAAM,OACvB,gBAACJ,GAAA,EAAU3E,KAAX,WACI,kCAAS+E,EAAOvH,OAChB,eAAC,GAAD,CAAQG,MAAOoH,EAAOvD,SACtB,6BAAIuD,EAAOC,UAAUC,UAAU,EAAE,MACjC,6BAAIF,EAAOT,YAJMS,EAAO/D,QAO5B,gBAAC2D,GAAA,EAAU3E,KAAX,WACI,0DACCyE,GAAsB,eAAC,GAAD,CAAS1G,QAAQ,SAAjB,SAA2B0G,IACjD7J,EACG,gBAACoC,GAAA,EAAD,CAAMC,SArHxB,SAACC,GJqGQ,IAACgI,EAAWH,EIpGvC7H,EAAEC,iBACFe,GJmG4BgH,EInGCtB,EAAMC,OAAO5F,GJmGH8G,EInGO,CAC1CvD,SACA8C,WJiGuB,yCAAuB,WAAOpG,EAAUC,GAAjB,oBAAAC,EAAA,sEAElDF,EAAS,CAAEhF,KAAMhE,IAFiC,EAKdiJ,IAAfvD,EAL6B,EAK1CD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXQ,SAgB5CC,KAAM0G,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQ1G,GAhBb,OAkBlDH,EAAS,CAAEhF,KAAM/D,IAlBiC,gDAqBlD+I,EAAS,CACLhF,KAAM9D,EACNgE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BkC,yDAAvB,2DIgBS,UACI,gBAAC7B,GAAA,EAAKoI,MAAN,CAAYC,UAAU,SAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,qBACI,gBAACtI,GAAA,EAAKO,QAAN,CACI+D,GAAG,SACH3D,MAAO6D,EACP/D,SAAU,SAACP,GAAD,OAAOmH,EAAUnH,EAAEQ,OAAOC,QAHxC,UAKI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAGZ,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBACI,eAACtI,GAAA,EAAKO,QAAN,CACA+D,GAAG,WACHiE,IAAI,IACJ5H,MAAO2G,EACP7G,SAAU,SAACP,GAAD,OAAOqH,EAAWrH,EAAEQ,OAAOC,aAI7C,eAACG,GAAA,EAAD,CACI5E,KAAK,SACL6E,QAAQ,UAFZ,uBAQJ,gBAAC,GAAD,qBACW,eAAC,QAAD,CAAMuB,GAAG,SAAT,qBADX,0CCxM/BkG,GAAY,SAACvH,EAAIkG,GAAL,gDAAa,WAAOjG,EAAUC,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,wBAA2BT,IADhB,gBAC1BU,EAD0B,EAC1BA,KAERT,EAAS,CACLhF,KAAMzD,EACN2D,QAAS,CACLK,QAASkF,EAAKqC,IACdxD,KAAMmB,EAAKnB,KACX2D,MAAOxC,EAAKwC,MACZO,MAAO/C,EAAK+C,MACZkD,aAAcjG,EAAKiG,aACnBT,SAMRpI,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUvH,IAAWlE,KAAKC,YAjB/B,2CAAb,yDC+GVyL,GAhHI,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAE7BsI,EAAYtB,EAAMC,OAAO5F,GAGzBkG,EAAMyB,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,OAAO,IAAM,EAIlE7H,EAAWa,cAGT7E,EADM8E,aAAY,SAACjG,GAAD,OAAWA,EAAMkB,QACnCC,UAIR6I,qBAAU,WACJmC,GACChH,EAASsH,GAAUN,EAAWf,MAGlC,CAACjG,EAAUgH,EAAWf,IAEzB,IAAM6B,EAAwB,SAAC/H,GAC3BC,EDHsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACLhF,KAAMxD,EACN0D,QAAS6E,IAGblC,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUvH,IAAWlE,KAAKC,aCHpD+L,CAAehI,KAQ5B,OACE,gBAACoC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACE,gDACwB,IAArB7J,EAAUgM,OACT,gBAAC,GAAD,iCACuB,eAAC,QAAD,CAAM5G,GAAG,IAAT,wBAGvB,eAACqF,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SACK7D,EAAUM,KAAI,SAACJ,GAAD,OACb,eAACuK,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CAAOhC,IAAK9G,EAAK+G,MAAOgC,IAAK/I,EAAKoD,KAAM4F,OAAK,EAAC+C,SAAO,MAEzD,eAAC7F,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAC,QAAD,CAAMzE,GAAE,mBAAclF,EAAKX,SAA3B,SAAuCW,EAAKoD,SAEhD,gBAAC8C,GAAA,EAAD,CAAKyD,GAAI,EAAT,cAAc3J,EAAKsH,SACnB,eAACpB,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAC/G,GAAA,EAAKO,QAAN,CACE+D,GAAG,SACH3D,MAAOvD,EAAK+J,IACZ1G,SAAU,SAACP,GAAD,OACRgB,EACIsH,GAAUpL,EAAKX,QAASqM,OAAO5I,EAAEQ,OAAOC,UALhD,SASK,YAAI6E,MAAMpI,EAAKwK,cAAcnC,QAAQjI,KAClC,SAACD,GAAD,OACE,yBAAoBoD,MAAOpD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UAO/B,eAAC+F,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACjG,GAAA,EAAD,CACE5E,KAAK,SACL6E,QAAQ,QACRkC,QAAS,kBAAM+F,EAAsB5L,EAAKX,UAH5C,SAKI,oBAAGoE,UAAU,yBAlCRzD,EAAKX,iBA2CtC,eAAC6G,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAWyB,QAAQ,QAAnB,UACI,gBAACzB,GAAA,EAAU3E,KAAX,WACI,6CAAe9F,EAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK+J,MAAK,GAA/D,aADJ,IAEMjK,EACCmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAK+J,IAAM/J,EAAKsH,QAAO,GACnD6E,QAAQ,MAEf,eAAC5B,GAAA,EAAU3E,KAAX,UACI,eAAClC,GAAA,EAAD,CACE5E,KAAK,SACL2E,UAAU,YACVgH,SAA+B,IAArB3K,EAAUgM,OACpBjG,QAzEE,WAEpBrD,EAAQS,KAAK,6BAmEG,8CCzFTmJ,GAZO,SAAC,GAAkB,IAAhB5E,EAAe,EAAfA,SACrB,OACE,eAACvC,GAAA,EAAD,UACI,eAACgB,GAAA,EAAD,CAAKxC,UAAU,4BAAf,SACI,eAACyC,GAAA,EAAD,CAAKmG,GAAI,GAAI1C,GAAI,EAAjB,SACKnC,SC8EJ8E,GA5EK,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAG7B,EAA0BC,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KAEM5I,EAAWa,cAEXpE,EAAYqE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAGlBmM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAGnEhD,qBAAU,WAEHnI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAUvB,OACE,gBAAC,GAAD,WACI,0CACCxN,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAZU,SAACC,GAEnBA,EAAEC,iBAEFe,EhBPa,SAACyI,EAAOE,GAAR,gDAAqB,WAAO3I,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACLhF,KAAMrD,IAGJwI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAaXG,KAAM0G,KACzB,mBACA,CAAEwB,QAAOE,YACTxI,GAhB8B,gBAa1BM,EAb0B,EAa1BA,KAMRT,EAAS,CACLhF,KAAMpD,EACNsD,QAASuF,IAGb5C,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAU/G,IAxBd,kDA4BlCT,EAAS,CACLhF,KAAMnD,EACNqD,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCkB,0DAArB,sDgBOJmI,CAAML,EAAOE,KAQpB,UACI,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAIzC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI5C,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,wBAKJ,eAACsC,GAAA,EAAD,CAAKxC,UAAU,OAAf,SACI,gBAACyC,GAAA,EAAD,2BACgB,IACd,eAAC,QAAD,CAAMhB,GAAIyH,EAAQ,6BACQA,GACtB,YAFJ,+BC0CDE,GA1GQ,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,SAAUhJ,EAAc,EAAdA,QAGhC,EAAwBC,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KACA,EAA8CjK,mBAAS,IAAvD,oBAAOsK,EAAP,KAAwBC,EAAxB,KACA,EAA8BvK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBwI,EAAhB,KAEMnJ,EAAWa,cAEXlE,EAAemE,aAAY,SAAAjG,GAAK,OAAIA,EAAM8B,gBACxC1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAGlBmM,EAAWnB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAGnEhD,qBAAU,WAEHnI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAgBvB,OACE,gBAAC,GAAD,WACI,0CACClI,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IACtCtF,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAnBU,SAACC,GAEnBA,EAAEC,iBAEC0J,IAAaM,EACZE,EAAW,0BAIXnJ,EjBgCY,SAACV,EAAMmJ,EAAOE,GAAd,gDAA2B,WAAO3I,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACLhF,KAAMjD,IAGJoI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAapBG,KAAM0G,KACzB,aACA,CAAE3H,OAAMmJ,QAAOE,YACfxI,GAhBuC,gBAanCM,EAbmC,EAanCA,KAMRT,EAAS,CACLhF,KAAMhD,EACNkD,QAASuF,IAGbT,EAAS,CACLhF,KAAMpD,EACNsD,QAASuF,IAGb5C,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAU/G,IA7BL,kDAgC3CT,EAAS,CACLhF,KAAM/C,EACNiD,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UArC2B,0DAA3B,sDiBhCHyI,CAAS9J,EAAMmJ,EAAOE,KAUjC,UACA,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACQ,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAIxC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAIzC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI5C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,+BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAInD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,yBAKJ,eAACsC,GAAA,EAAD,CAAKxC,UAAU,OAAf,SACI,gBAACyC,GAAA,EAAD,8BACmB,IACjB,eAAC,QAAD,CAAMhB,GAAIyH,EAAQ,0BACKA,GACnB,SAFJ,4B,UCuEDQ,GArKO,SAAC,GAA0B,EAAxB3B,SAAyB,IAAfhJ,EAAc,EAAdA,QAG/B,EAAwBC,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KACA,EAA8CjK,mBAAS,IAAvD,oBAAOsK,EAAP,KAAwBC,EAAxB,KACA,EAA8BvK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBwI,EAAhB,KAEMnJ,EAAWa,cAEXjE,EAAckE,aAAY,SAAAjG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAGAhB,EADkBoF,aAAY,SAAAjG,GAAK,OAAIA,EAAMiC,qBAC7CpB,QAEF+B,EAAcqD,aAAY,SAAAjG,GAAK,OAAIA,EAAM4C,eAC9B6L,EAA8C7L,EAAvDxC,QAA+BsO,EAAwB9L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAGpDmH,qBAAU,WAEFnI,EAGIG,GAASA,EAAKyC,OAAQ5D,GAMtBsN,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,SALdzI,EAAS,CAAEhF,KAAMvC,KACjBuH,EAASF,GAAe,YACxBE,ECwIY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLhF,KAAMjB,KAHgB,EAOUkG,IAAfvD,EAPK,EAOlBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAZhB,SAgBHC,KAAMC,IAAN,uBAAkCL,GAhB/B,gBAgBlBM,EAhBkB,EAgBlBA,KAERT,EAAS,CACLhF,KAAMhB,GACNkB,QAASuF,IApBa,kDAwB1BT,EAAS,CACLhF,KAAMf,GACNiB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BU,0DAAN,0DD9IhBjC,EAAQS,KAAK,YAYlB,CAACa,EAAUtB,EAAShC,EAAUG,EAAMnB,IAgBvC,OACE,gBAACyG,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACA,+CACClF,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IAEtCtF,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACpCK,GAAW,eAAC,GAAD,CAASmE,QAAQ,UAAjB,8BACX5E,GAAW,eAAC,GAAD,IACZ,gBAAC6D,GAAA,EAAD,CAAMC,SAtBU,SAACC,GAEnBA,EAAEC,iBAEC0J,IAAaM,EACZE,EAAW,0BAIXnJ,ElBiGqB,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLhF,KAAM1C,IAHyB,EAOC2H,IAAfvD,EAPc,EAO3BD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAbP,SAiBZC,KAAMiJ,IACzB,qBACA3M,EACAsD,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACLhF,KAAMzC,EACN2C,QAASuF,IAIbT,EAAS,CACLhF,KAAMpD,EACNsD,QAASuF,IAGb5C,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAU/G,IAlCb,kDAqCnCT,EAAS,CACLhF,KAAMxC,EACN0C,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1CmB,0DAAV,wDkBjGZ8I,CAAkB,CAAE1J,GAAIlD,EAAKiG,IAAKxD,OAAMmJ,QAAOE,eAa1D,UACA,gBAAC7J,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACQ,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAIxC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAIzC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI5C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,+BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,WACL0E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAInD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,0BAKJ,gBAACuC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,4CACCyD,EACC,eAAC,GAAD,IACAC,EAAc,eAAC,GAAD,CAAS1J,QAAQ,SAAjB,SAA2B0J,IAEvC,gBAACG,GAAA,EAAD,CACEC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVnK,UAAU,WALZ,UAMM,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,iCACKjC,EAAOpB,KAAI,SAACc,GAAD,OACR,gCACI,8BAAKA,EAAM0F,MACX,8BAAK1F,EAAM0J,UAAUC,UAAU,EAAG,MAClC,8BAAK3J,EAAM2M,aACX,8BACK3M,EAAM4M,OACD5M,EAAM6M,OAAOlD,UAAU,EAAG,IAC1B,oBAAGpH,UAAU,eAAe6C,MAAO,CAACD,MAAO,WAGrD,8BACKnF,EAAM8M,YACD9M,EAAM+M,YAAYpD,UAAU,EAAG,IAC/B,oBAAGpH,UAAU,eAAe6C,MAAO,CAACD,MAAO,WAGrD,8BACI,eAAC,iBAAD,CAAenB,GAAE,iBAAYhE,EAAM0F,KAAnC,SACI,eAAClD,GAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,QAAnC,2BAlBHzC,EAAM0F,oBErGhCsH,GAvCO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1C,OACI,gBAAC9I,GAAA,EAAD,CAAK/B,UAAU,8BAAf,UACI,eAAC+B,GAAA,EAAII,KAAL,UACKuI,EACG,eAAC,iBAAD,CAAejJ,GAAG,SAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAUgF,UAAQ,EAAlB,uBAGR,eAACjF,GAAA,EAAII,KAAL,UACKwI,EACG,eAAC,iBAAD,CAAelJ,GAAG,YAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,yBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAUgF,UAAQ,EAAlB,wBAGR,eAACjF,GAAA,EAAII,KAAL,UACKyI,EACG,eAAC,iBAAD,CAAenJ,GAAG,WAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAEJ,eAACD,GAAA,EAAIC,KAAL,CAAUgF,UAAQ,EAAlB,uBAGR,eAACjF,GAAA,EAAII,KAAL,UACK0I,EACG,eAAC,iBAAD,CAAepJ,GAAG,cAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,4BAEJ,eAACD,GAAA,EAAIC,KAAL,CAAUgF,UAAQ,EAAlB,+BCqDL8D,GAlFQ,SAAC,GAAiB,IAAf/L,EAAc,EAAdA,QAGdzC,EADK6E,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QAChCE,gBAGR,EAA8B0C,mBAAS1C,EAAgByO,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBhM,mBAAS1C,EAAgB2O,MAAjD,oBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoClM,mBAAS1C,EAAgB6O,YAA7D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BpM,mBAAS1C,EAAgB+O,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KAEMjL,EAAWa,cAUjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAewJ,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAACxL,GAAA,EAAD,CAAMC,SAZQ,SAACC,GRkBQ,IAACyB,EQhB5BzB,EAAEC,iBACFe,GRe4BS,EQfC,CAAEiK,UAASE,OAAME,aAAYE,WRerB,SAAChL,GAC1CA,EAAS,CACLhF,KAAMvD,EACNyD,QAASuF,IAGb5C,aAAa0J,QAAQ,kBAAmBxJ,KAAKyJ,UAAU/G,OQnBnD/B,EAAQS,KAAK,aAOT,UACI,gBAACL,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,gBACZD,MAAOiL,EACPQ,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO2L,EAAW3L,EAAEQ,OAAOC,aAK3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,aACZD,MAAOmL,EACPM,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO6L,EAAQ7L,EAAEQ,OAAOC,aAKxC,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,aAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,0BACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,oBACZD,MAAOqL,EACPI,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO+L,EAAc/L,EAAEQ,OAAOC,aAK9C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,sBACA,eAACtI,GAAA,EAAKO,QAAN,CACErE,KAAK,OACL0E,YAAY,gBACZD,MAAOuL,EACPE,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAOiM,EAAWjM,EAAEQ,OAAOC,aAK3C,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,6BCZDsL,GA9DO,SAAC,GAAiB,IAAfzM,EAAc,EAAdA,QAERoC,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QAChCE,iBAIJyC,EAAQS,KAAK,aAIjB,MAA0CR,mBAAS,UAAnD,oBAAOnC,EAAP,KAAsB4O,EAAtB,KAEMpL,EAAWa,cAUjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAewJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,iDACA,gBAACzL,GAAA,EAAD,CAAMC,SAZQ,SAACC,GTyBM,IAACyB,ESvB1BzB,EAAEC,iBACFe,GTsB0BS,EStBCjE,ETsBQ,SAACwD,GACxCA,EAAS,CACLhF,KAAMtD,EACNwD,QAASuF,IAGb5C,aAAa0J,QAAQ,gBAAiBxJ,KAAKyJ,UAAU/G,OS1BjD/B,EAAQS,KAAK,gBAOT,UACI,gBAACL,GAAA,EAAKoI,MAAN,WACI,eAACpI,GAAA,EAAKsI,MAAN,CAAYhE,GAAG,SAAf,2BACA,gBAAChB,GAAA,EAAD,WACI,eAACtD,GAAA,EAAKuM,MAAN,CACIrQ,KAAK,QACLsQ,MAAM,wBACNvL,GAAG,SACHT,KAAK,gBACLG,MAAM,SACN8L,SAAO,EACPhM,SAAU,SAACP,GAAD,OAAOoM,EAAiBpM,EAAEQ,OAAOC,UAI/C,eAACX,GAAA,EAAKuM,MAAN,CACIrQ,KAAK,QACLsQ,MAAM,SACNvL,GAAG,SACHT,KAAK,gBACLG,MAAM,SACNF,SAAU,SAACP,GAAD,OAAOoM,EAAiBpM,EAAEQ,OAAOC,gBAMvD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,6BCiGD2L,GAtJU,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QAClBsB,EAAWa,cAEX9E,EAAO+E,aAAY,SAAAjG,GAAK,OAAIA,EAAMkB,QAGlC0P,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAMrD,QAAQ,IAIlDtM,EAAK8P,WAAaJ,EAAY1P,EAAKC,UAAUmM,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKsH,MAAQtH,EAAK+J,MAAK,IAChGlK,EAAK+P,cAAgBL,EAAY1P,EAAK8P,WAAa,IAAM,EAAI,KAC7D9P,EAAKgQ,SAAWN,EAAY7D,QAAQ,IAAO7L,EAAK8P,YAAYxD,QAAQ,KACpEtM,EAAKgO,YACDnC,OAAO7L,EAAK8P,YAAcjE,OAAO7L,EAAK+P,eAAiBlE,OAAO7L,EAAKgQ,WACrE1D,QAAQ,GAEV,IAAMlL,EAAc2D,aAAY,SAAAjG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBwJ,qBAAU,WACHnJ,GACCgD,EAAQS,KAAR,iBAAuB/B,EAAM0F,QAIlC,CAACpE,EAAShD,IAcb,OACI,uCACI,eAAC,GAAD,CAAe2O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACrI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,gBAAC4G,GAAA,EAAU3E,KAAX,WACI,2CACA,+BACI,gDACC/F,EAAKE,gBAAgByO,QAF1B,IAGK,IAAK3O,EAAKE,gBAAgB2O,KAH/B,IAIK,IAAK7O,EAAKE,gBAAgB6O,WAJ/B,IAKK,IAAK/O,EAAKE,gBAAgB+O,cAInC,gBAACvE,GAAA,EAAU3E,KAAX,WACI,iDACA,+BACI,+CACC/F,EAAKS,oBAId,gBAACiK,GAAA,EAAU3E,KAAX,WACI,8CAC2B,IAA1B/F,EAAKC,UAAUgM,OACd,eAAC,GAAD,iCAEE,eAACvB,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SACK9D,EAAKC,UAAUM,KAAI,SAACJ,EAAM8P,GAAP,OAChB,eAACvF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CACIhC,IAAK9G,EAAK+G,MACVgC,IAAK/I,EAAK+G,MACViC,OAAK,EACL+C,SAAO,MAGf,eAAC7F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMhB,GAAE,mBAAclF,EAAKX,SAA3B,SACKW,EAAKoD,SAGd,gBAAC8C,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACK3J,EAAK+J,IADV,OACmB/J,EAAKsH,MADxB,OACmCtH,EAAK+J,IAAM/J,EAAKsH,aAhBtCwI,gBA0B7C,eAAC5J,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAU3E,KAAX,UACI,kDAEJ,eAAC2E,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOrG,EAAK8P,mBAGpB,eAACpF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOrG,EAAK+P,sBAGpB,eAACrF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOrG,EAAKgQ,iBAGpB,eAACtF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOrG,EAAKgO,mBAGpB,eAACtD,GAAA,EAAU3E,KAAX,UACKzG,GAAS,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,MAEzC,eAACoL,GAAA,EAAU3E,KAAX,UACI,eAAClC,GAAA,EAAD,CACI5E,KAAK,SACL2E,UAAU,YACVgH,SAA6B,IAAnB5K,EAAKC,UACf+F,QA5GN,WACtB/B,EJhBmB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLhF,KAAM3B,KAHoB,EAOM4G,IAAfvD,EAPS,EAOtBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAbZ,SAiBPC,KAAM0G,KACzB,cACA7J,EACA+C,GApB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAMRT,EAAS,CACLhF,KAAM1B,GACN4B,QAASuF,IAzBiB,kDA6B9BT,EAAS,CACLhF,KAAMzB,GACN2B,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlCc,0DAAX,wDIgBVsL,CAAY,CACjB3O,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBqP,WAAY9P,EAAK8P,WACjBC,cAAe/P,EAAK+P,cACpBC,SAAUhQ,EAAKgQ,SACfhC,WAAYhO,EAAKgO,eAgGG,yC,SC+FjBmC,GAjOK,SAAC,GAAwB,IAsBhBR,EAtBNhG,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACpByN,EAAUzG,EAAMC,OAAO5F,GAE7B,EAAgCpB,oBAAS,GAAzC,oBAAOyN,EAAP,KAAiBC,EAAjB,KAEMrM,EAAWa,cAGTnE,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFW,EAAeyD,aAAY,SAAAjG,GAAK,OAAIA,EAAMwC,gBACxCD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAWuD,aAAY,SAAAjG,GAAK,OAAIA,EAAM0C,YAE3B+O,EAAoC/O,EAA7CtC,QAA8BsR,EAAehP,EAAxB7B,QAEvB8B,EAAesD,aAAY,SAAAjG,GAAK,OAAIA,EAAM2C,gBAC/BgP,EAA4ChP,EAArDvC,QAAkCwR,EAAmBjP,EAA5B9B,QAEjC,IAAIT,EAAS,CAOTmC,EAAMyO,YALeH,EAMjBtO,EAAME,WAAW6K,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKsH,MAAQtH,EAAK+J,MAAK,IAL5D0F,KAAKC,MAAY,IAANF,GAAa,KAAMrD,QAAQ,IAStDxD,qBAAU,WACFnI,GACAgC,EAAQS,KAAK,UAIjB,ILYwBY,EKZlB2M,EAAe,yCAAG,iCAAAxM,EAAA,sEAEaK,KAAMC,IAAI,sBAFvB,gBAENmM,EAFM,EAEZlM,MAEFmM,EAASC,SAASC,cAAc,WAC/B9R,KAAO,kBACd4R,EAAO5J,IAAP,kDAAwD2J,GACxDC,EAAOG,OAAS,EAChBH,EAAOI,OAAS,WAEZX,GAAY,IAGhBQ,SAASI,KAAKC,YAAYN,GAbN,4CAAH,sDAmBjBxP,GAASmP,GAAcE,GAAkBrP,EAAM0F,MAAQqJ,GACvDnM,EAAS,CAAEhF,KAAMlB,KACjBkG,EAAS,CAAEhF,KAAMP,KAEjBuF,GLXoBD,EKWKoM,ELXN,yCAAQ,WAAOnM,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLhF,KAAMxB,KAHqB,EAOKyG,IAAfvD,EAPU,EAOvBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAGLC,cAAc,UAAD,OAAY3D,EAAS4D,SAbX,SAiBRC,KAAMC,IAAN,sBACJT,GACfI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACLhF,KAAMvB,GACNyB,QAASuF,IAxBkB,kDA4B/BT,EAAS,CACLhF,KAAMtB,GACNwB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAjCe,0DAAR,2DKaZvD,EAAM4M,SAEVmD,OAAOC,OACNV,IAEAL,GAAY,MAGrB,CAACrM,EAAU5C,EAAO+O,EAASI,EAAYE,EAAgB/N,EAAShC,IAWnE,OAAOzB,EACH,eAAC,GAAD,IACII,EAAU,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IACnC,uCACF,yCAAW+B,EAAM0F,OACjB,gBAACX,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,gBAAC4G,GAAA,EAAU3E,KAAX,WACI,2CACA,+BACI,6CADJ,IAC6B1E,EAAMP,KAAKyC,QAExC,+BACI,8CAAwB,oBAAG+N,KAAI,iBAAYjQ,EAAMP,KAAK4L,OAA9B,SAAwCrL,EAAMP,KAAK4L,WAE/E,+BACI,gDACCrL,EAAMnB,gBAAgByO,QAF3B,IAGK,IAAKtN,EAAMnB,gBAAgB2O,KAHhC,IAIK,IAAKxN,EAAMnB,gBAAgB6O,WAJhC,IAKK,IAAK1N,EAAMnB,gBAAgB+O,WAE/B5N,EAAM8M,YACH,gBAAC,GAAD,CAASrK,QAAQ,UAAjB,0BAAyCzC,EAAM+M,eAE/C,eAAC,GAAD,CAAStK,QAAQ,SAAjB,8BAIR,gBAAC4G,GAAA,EAAU3E,KAAX,WACI,iDACA,+BACI,+CACC1E,EAAMZ,iBAEVY,EAAM4M,OACH,gBAAC,GAAD,CAASnK,QAAQ,UAAjB,qBAAoCzC,EAAM6M,UAE1C,eAAC,GAAD,CAASpK,QAAQ,SAAjB,yBAIR,gBAAC4G,GAAA,EAAU3E,KAAX,WACI,8CAE6B,IAA5B1E,EAAME,WAAW0K,OAChB,eAAC,GAAD,6BAEE,eAACvB,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,SAEKzC,EAAME,WAAWhB,KAAI,SAACJ,EAAM8P,GAAP,OAClB,eAACvF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACb,GAAA,EAAD,CACIhC,IAAK9G,EAAK+G,MACVgC,IAAK/I,EAAK+G,MACViC,OAAK,EACL+C,SAAO,MAGf,eAAC7F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMhB,GAAE,mBAAclF,EAAKX,SAA3B,SACKW,EAAKoD,SAGd,gBAAC8C,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACK3J,EAAK+J,IADV,OACmB/J,EAAKsH,MADxB,OACmCtH,EAAK+J,IAAM/J,EAAKsH,aAhBtCwI,gBA0B7C,eAAC5J,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW5G,QAAQ,QAAnB,UACI,eAAC4G,GAAA,EAAU3E,KAAX,UACI,kDAEJ,eAAC2E,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOhF,EAAMyO,mBAGrB,eAACpF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOhF,EAAM0O,sBAGrB,eAACrF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOhF,EAAM2O,iBAGrB,eAACtF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOhF,EAAM2M,oBAKnB3M,EAAM4M,QACJ,gBAACvD,GAAA,EAAU3E,KAAX,WACKwK,GAAc,eAAC,GAAD,IACbF,EACE,eAAC,gBAAD,CACIkB,OAAQlQ,EAAM2M,WACdwD,UA7HV,SAACC,GAC3BC,QAAQC,IAAIF,GACZxN,ELagB,SAACmM,EAASqB,GAAV,gDAA4B,WAAOxN,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5CF,EAAS,CACLhF,KAAMrB,KAHkC,EAORsG,IAAfvD,EAPuB,EAOpCD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAbE,SAiBrBC,KAAMiJ,IAAN,sBAEJ2C,EAFI,QAGnBqB,EACArN,GArBwC,gBAiBpCM,EAjBoC,EAiBpCA,KAORT,EAAS,CACLhF,KAAMpB,GACNsB,QAASuF,IA1B+B,kDA8B5CT,EAAS,CACLhF,KAAMnB,GACNqB,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAnC4B,0DAA5B,wDKbPgN,CAASxB,EAASqB,OAwHc,eAAC,GAAD,OAUpBhB,GAAkB,eAAC,GAAD,IAClB9P,GAAYA,EAASuF,SAAW7E,EAAM4M,SAAW5M,EAAM8M,aACpD,eAACzD,GAAA,EAAU3E,KAAX,UACI,eAAClC,GAAA,EAAD,CACI5E,KAAK,SACL2E,UAAU,gBACVoC,QArIN,WAC1B/B,ELiDoB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLhF,KAAMV,KAHqB,EAOK2F,IAAfvD,EAPU,EAOvBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAGLC,cAAc,UAAD,OAAY3D,EAAS4D,SAbX,SAiBRC,KAAMiJ,IAAN,sBAEJpM,EAAM0F,IAFF,YAGnB,GACA3C,GArB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAORT,EAAS,CACLhF,KAAMT,GACNW,QAASuF,IA1BkB,kDA8B/BT,EAAS,CACLhF,KAAMR,GACNU,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAnCe,0DAAX,wDKjDXiN,CAAaxQ,KAiIM,+CC5HrByQ,GAvFQ,SAAC,GAAiB,IAAfnP,EAAc,EAAdA,QAChBsB,EAAWa,cAEX9D,EAAW+D,aAAY,SAAAjG,GAAK,OAAIA,EAAMkC,YACpC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAGSoR,EADEhN,aAAY,SAAAjG,GAAK,OAAIA,EAAMoC,cACtCvB,QAERmJ,qBAAU,WACHnI,GAAYA,EAASuF,QACpBjC,EzBuLa,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACLhF,KAAMtC,KAHa,EAOauH,IAAfvD,EAPE,EAOfD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAZnB,SAgBAC,KAAMC,IAAI,aAAcL,GAhBxB,gBAgBfM,EAhBe,EAgBfA,KAERT,EAAS,CACLhF,KAAMrC,GACNuC,QAASuF,IApBU,kDAwBvBT,EAAS,CACLhF,KAAMpC,GACNsC,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BO,0DAAN,yDyBrLbjC,EAAQS,KAAK,YAGlB,CAACa,EAAUtB,EAAShC,EAAUoR,IAG/B,IAAMC,EAAgB,SAAChO,GAEhBoN,OAAOa,QAAQ,kBACdhO,EzB8MY,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE1BF,EAAS,CAAEhF,KAAMlC,KAFS,EAKUmH,IAAfvD,EALK,EAKlBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAVhB,SAcpBC,KAAM0N,OAAN,qBAA2BlO,GAAMI,GAdb,OAgB1BH,EAAS,CAAEhF,KAAMjC,KAhBS,gDAkB1BiH,EAAS,CACLhF,KAAMhC,GACNkC,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAvBU,yDAAR,wDyB9MHuN,CAAWnO,KAI9B,OACI,uCACI,wCACC9E,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAEvD,gBAACqO,GAAA,EAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVnK,UAAU,WALd,UAOI,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAGR,iCAEK3C,EAAMV,KAAI,SAAAO,GAAI,OACX,gCACI,8BAAKA,EAAKiG,MACV,8BAAKjG,EAAKyC,OACV,8BAAI,oBAAG+N,KAAI,iBAAYxQ,EAAK4L,OAAxB,SAAkC5L,EAAK4L,UAC3C,8BACK5L,EAAKoF,QACF,oBAAGtC,UAAU,eAAe6C,MAAQ,CAACD,MAAO,WAE5C,oBAAG5C,UAAU,eAAe6C,MAAO,CAACD,MAAO,WAGnD,gCACI,eAAC,iBAAD,CAAenB,GAAE,sBAAiBvE,EAAKiG,IAAtB,SAAjB,SACI,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAGrB,eAACC,GAAA,EAAD,CACIC,QAAQ,SACRF,UAAU,SACVoC,QAAS,kBAAMgM,EAAclR,EAAKiG,MAHtC,SAKI,oBAAGnD,UAAU,wBAtBhB9C,EAAKiG,iBCiD3BqL,GAnGQ,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACvB0P,EAAS1I,EAAMC,OAAO5F,GAG5B,EAAwBpB,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAA8B/J,oBAAS,GAAvC,oBAAOsD,EAAP,KAAgBoM,EAAhB,KAEMrO,EAAWa,cAEXjE,EAAckE,aAAY,SAAAjG,GAAK,OAAIA,EAAM+B,eACvC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGlBK,EAAa4D,aAAY,SAAAjG,GAAK,OAAIA,EAAMqC,cAEjCoR,EAGTpR,EAHAjC,QACOsT,EAEPrR,EAFA7B,MACSmT,EACTtR,EADAxB,QAGJmJ,qBAAU,WACH2J,GACCxO,EAAS,CAAEhF,KAAM5B,KACjBsF,EAAQS,KAAK,oBAITtC,EAAKyC,MAAQzC,EAAKiG,MAAQsL,GAG1BpF,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,OACd4F,EAAWxR,EAAKoF,UAJhBjC,EAASF,GAAesO,MAOjC,CAACpO,EAAUtB,EAAS0P,EAAQvR,EAAM2R,IASrC,OACI,uCACI,eAAC,QAAD,CAAMpN,GAAG,kBAAkBzB,UAAU,qBAArC,qBAGA,gBAAC,GAAD,WACA,4CACC2O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1O,QAAQ,SAAjB,SAA2B0O,IAC1CtT,EACK,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE7B,gBAACyD,GAAA,EAAD,CAAMC,SApBI,SAACC,GAEnBA,EAAEC,iBACFe,E1BsNkB,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLhF,KAAM/B,KAHkB,EAOQgH,IAAfvD,EAPO,EAOpBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAbd,SAiBLC,KAAMiJ,IAAN,qBAAwB3M,EAAKiG,KAAOjG,EAAMsD,GAjBrC,gBAiBpBM,EAjBoB,EAiBpBA,KAERT,EAAS,CAAEhF,KAAM9B,KAEjB8G,EAAS,CAAEhF,KAAM7C,EAAsB+C,QAASuF,IArBpB,kDAuB5BT,EAAS,CACLhF,KAAM7B,GACN+B,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BY,0DAAV,wD0BtNT8N,CAAW,CAAE3L,IAAKsL,EAAQ9O,OAAMmJ,QAAOxG,cAiBxC,UACI,gBAACnD,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,4BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,QACL0E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,UAAtB,SACI,eAACrI,GAAA,EAAKuM,MAAN,CACIrQ,KAAK,WACLsQ,MAAM,WACNC,QAAStJ,EACT1C,SAAU,SAACP,GAAD,OAAOqP,EAAWrP,EAAEQ,OAAO+L,cAI7C,eAAC3L,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,8BC0CL6O,GApIW,SAAC,GAAwB,IAAtBhQ,EAAqB,EAArBA,QACnBgG,EADwC,EAAZgB,MACTC,OAAOjB,YAAc,EAExC1E,EAAWa,cAEXjG,EAAckG,aAAY,SAAAjG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAEnCK,EAAgBqF,aAAY,SAAAjG,GAAK,OAAIA,EAAMY,iBAChCkT,EAA8DlT,EAAvER,QAA+B2T,EAAwCnT,EAA/CJ,MAA6ByS,EAAkBrS,EAA3BC,QAE9CC,EAAgBmF,aAAY,SAAAjG,GAAK,OAAIA,EAAMc,iBAEpCkT,EAIRlT,EAJDV,QACO6T,EAGNnT,EAHDN,MACS0T,EAERpT,EAFDD,QACSsT,EACRrT,EADDJ,QAIImB,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAERmI,qBAAU,WACN7E,EAAS,CAAEhF,KAAMrE,IAEb+F,EAASuF,SACTvD,EAAQS,KAAK,UAGd4P,EACCrQ,EAAQS,KAAR,yBAA+B6P,EAAelM,IAA9C,UAGA9C,EAASyE,GAAa,GAAIC,MAI/B,CACC1E,EACAtB,EACAhC,EACAoR,EACAiB,EACAC,EACAtK,IAIJ,IAAMqJ,EAAgB,SAAChO,GAEhBoN,OAAOa,QAAQ,kBACdhO,EnBYiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CAAEhF,KAAM3E,IAFY,EAKO4J,IAAfvD,EALQ,EAKrBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAVb,SAcvBC,KAAM0N,OAAN,wBAA8BlO,GAAMI,GAdb,OAgB7BH,EAAS,CAAEhF,KAAM1E,IAhBY,gDAkB7B0J,EAAS,CACLhF,KAAMzE,EACN2E,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAvBa,yDAAR,wDmBZRsO,CAAclP,KAQ/B,OACI,uCACI,gBAACoC,GAAA,EAAD,CAAKxC,UAAU,qBAAf,UACI,eAACyC,GAAA,EAAD,UACI,6CAEJ,eAACA,GAAA,EAAD,CAAKzC,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CACID,UAAU,OACVoC,QAbU,WACzB/B,EnBmCoB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CAAEhF,KAAMxE,IAFU,EAKSyJ,IAAfvD,EALM,EAKnBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAVf,SAcJC,KAAM0G,KAAN,gBAA4B,GAAI9G,GAd5B,gBAcnBM,EAdmB,EAcnBA,KAERT,EAAS,CAAEhF,KAAMvE,EAAwByE,QAASuF,IAhBvB,kDAkB3BT,EAAS,CACLhF,KAAMtE,EACNwE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAvBW,0DAAN,0DmBzBT,UAII,oBAAGhB,UAAU,gBAJjB,0BAQPgP,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS/O,QAAQ,SAAjB,SAA2B+O,IAC1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASjP,QAAQ,SAAjB,SAA2BiP,IAC1C7T,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAEvD,uCACI,gBAACqO,GAAA,EAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVnK,UAAU,WALd,UAOI,iCACI,gCACI,qCACA,uCACA,wCACA,2CACA,wCACA,6BAGR,iCAEK7E,EAASwB,KAAI,SAAAf,GAAO,OACjB,gCACI,8BAAKA,EAAQuH,MACb,8BAAKvH,EAAQ+D,OACb,oCAAM/D,EAAQiI,SACd,8BAAKjI,EAAQ2T,WACb,8BAAK3T,EAAQ4T,QACb,gCACI,eAAC,iBAAD,CAAe/N,GAAE,yBAAoB7F,EAAQuH,IAA5B,SAAjB,SACI,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAGrB,eAACC,GAAA,EAAD,CACIC,QAAQ,SACRF,UAAU,SACVoC,QAAS,kBAAMgM,EAAcxS,EAAQuH,MAHzC,SAKI,oBAAGnD,UAAU,wBAjBhBpE,EAAQuH,aAwB7B,eAAC,GAAD,CAAU3H,MAAOA,EAAOC,KAAMA,EAAM6G,SAAS,WCsElDmN,GAlMW,SAAC,GAAwB,IAAtB1J,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QAC1BsI,EAAYtB,EAAMC,OAAO5F,GAG/B,EAAwBpB,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,GAAnC,oBAAO6E,EAAP,KAAc6L,EAAd,KACA,EAA0B1Q,mBAAS,IAAnC,oBAAOsE,EAAP,KAAcqM,EAAd,KACA,EAA0B3Q,mBAAS,IAAnC,oBAAOwQ,EAAP,KAAcI,EAAd,KACA,EAAgC5Q,mBAAS,IAAzC,oBAAOuQ,EAAP,KAAiBM,EAAjB,KACA,EAAwC7Q,mBAAS,GAAjD,oBAAO+H,EAAP,KAAqB+I,EAArB,KACA,EAAsC9Q,mBAAS,IAA/C,oBAAO0G,EAAP,KAAoBqK,EAApB,KACA,EAAkC/Q,oBAAS,GAA3C,oBAAOgR,EAAP,KAAkBC,EAAlB,KAEM5P,EAAWa,cAEXvF,EAAiBwF,aAAY,SAAAjG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGlBK,EAAgBkF,aAAY,SAAAjG,GAAK,OAAIA,EAAMe,iBAEpC0S,EAGT1S,EAHAX,QACOsT,EAEP3S,EAFAP,MACSmT,EACT5S,EADAF,QAGJmJ,qBAAU,WACH2J,GACCxO,EAAS,CAAEhF,KAAMjE,IACjB2H,EAAQS,KAAK,uBAIT5D,EAAQ+D,MAAQ/D,EAAQuH,MAAQkE,GAGhCgC,EAAQzN,EAAQ+D,MAChB+P,EAAS9T,EAAQiI,OACjB8L,EAAS/T,EAAQ0H,OACjBsM,EAAShU,EAAQ4T,OACjBK,EAAYjU,EAAQ2T,UACpBO,EAAgBlU,EAAQmL,cACxBgJ,EAAenU,EAAQ8J,cARvBrF,EAAS2E,GAAmBqC,MAWrC,CAAChH,EAAUtB,EAASsI,EAAWzL,EAASiT,IAG3C,IAAMqB,EAAiB,yCAAG,WAAO7Q,GAAP,wBAAAkB,EAAA,6DAEhB4P,EAAO9Q,EAAEQ,OAAOuQ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GAEzBF,GAAa,GANS,SASZzP,EAAS,CACXC,QAAS,CACL,eAAgB,wBAXN,SAgBKG,KAAM0G,KAAK,cAAe+I,EAAU7P,GAhBzC,gBAgBVM,EAhBU,EAgBVA,KAGR6O,EAAS7O,GACTmP,GAAa,GApBK,kDAsBlBnC,QAAQpS,MAAR,MAEAuU,GAAa,GAxBK,0DAAH,sDA4CvB,OACI,uCACI,eAAC,QAAD,CAAMxO,GAAG,qBAAqBzB,UAAU,qBAAxC,qBAGA,gBAAC,GAAD,WACA,+CACC2O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1O,QAAQ,SAAjB,SAA2B0O,IAC1CtT,EACG,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAE3B,gBAACyD,GAAA,EAAD,CAAMC,SA7BI,SAACC,GAEnBA,EAAEC,iBACFe,EpBsCqB,SAACzE,GAAD,gDAAa,WAAOyE,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CAAEhF,KAAMpE,IAFiB,EAKEqJ,IAAfvD,EALa,EAK1BD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAEhBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXR,SAeXC,KAAMiJ,IAAN,wBAA2BjO,EAAQuH,KAAOvH,EAAS4E,GAfxC,gBAe1BM,EAf0B,EAe1BA,KAERT,EAAS,CAAEhF,KAAMnE,EAAwBqE,QAASuF,IAjBhB,kDAoBlCT,EAAS,CACLhF,KAAMlE,EACNoE,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBkB,0DAAb,wDoBtCZwP,CAAc,CACnBrN,IAAKkE,EACL1H,OACAkE,QACAP,QACAkM,QACAD,WACAxI,eACArB,kBAkBI,UACI,gBAACvG,GAAA,EAAKoI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,mBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,oBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,SACL0E,YAAY,cACZD,MAAO+D,EACPjE,SAAU,SAACP,GAAD,OAAOqQ,EAASrQ,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACA,eAACrI,GAAA,EAAKsI,MAAN,oBACI,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,kBACZD,MAAOwD,EACP1D,SAAU,SAACP,GAAD,OAAOsQ,EAAStQ,EAAEQ,OAAOC,UAEvC,eAACX,GAAA,EAAKsR,KAAN,CACIrQ,GAAG,aACHuL,MAAM,cACN+E,QAAM,EACN9Q,SAAUsQ,IAEbF,GAAa,eAAC,GAAD,OAGlB,gBAAC7Q,GAAA,EAAKoI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,oBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,cACZD,MAAO0P,EACP5P,SAAU,SAACP,GAAD,OAAOuQ,EAASvQ,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,uBACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,iBACZD,MAAOyP,EACP3P,SAAU,SAACP,GAAD,OAAOwQ,EAAYxQ,EAAEQ,OAAOC,aAI9C,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,eAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,6BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,SACL0E,YAAY,uBACZD,MAAOiH,EACPnH,SAAU,SAACP,GAAD,OAAOyQ,EAAgBzQ,EAAEQ,OAAOC,aAIlD,gBAACX,GAAA,EAAKoI,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACrI,GAAA,EAAKsI,MAAN,0BACA,eAACtI,GAAA,EAAKO,QAAN,CACIrE,KAAK,OACL0E,YAAY,oBACZD,MAAO4F,EACP9F,SAAU,SAACP,GAAD,OAAO0Q,EAAe1Q,EAAEQ,OAAOC,aAIjD,eAACG,GAAA,EAAD,CAAQ5E,KAAK,SAAS6E,QAAQ,UAA9B,8BCxGLyQ,GAnFS,SAAC,GAAwB,IAAtB5R,EAAqB,EAArBA,QACjBsB,GADsC,EAAZ0F,MACf7E,eAEXlD,EAAYmD,aAAY,SAAAjG,GAAK,OAAIA,EAAM8C,aACrC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADUoE,aAAY,SAAAjG,GAAK,OAAIA,EAAM4B,aACrCC,SAWR,OATAmI,qBAAU,WACHnI,GAAYA,EAASuF,QACpBjC,EVkMc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CAAEhF,KAAMb,KAFO,EAKY8F,IAAfvD,EALG,EAKhBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CAELC,cAAc,UAAD,OAAY3D,EAAS4D,SAVlB,SAcDC,KAAMC,IAAI,cAAeL,GAdxB,gBAchBM,EAdgB,EAchBA,KAERT,EAAS,CAAEhF,KAAMZ,GAAoBc,QAASuF,IAhBtB,kDAmBxBT,EAAS,CACLhF,KAAMX,GACNa,QACE,KAAMwF,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAxBQ,0DAAN,yDUhMdjC,EAAQS,KAAK,YAGlB,CAACa,EAAUtB,EAAShC,IAGnB,uCACI,yCACCzB,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASwE,QAAQ,SAAjB,SAA2BxE,IAEvD,gBAACqO,GAAA,EAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVnK,UAAU,WALd,UAOI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,iCAEKjC,EAAOpB,KAAI,SAAAc,GAAK,OACb,gCACI,8BAAKA,EAAM0F,MAEX,8BAAK1F,EAAMP,MAAQO,EAAMP,KAAKyC,OAC9B,8BAAKlC,EAAM0J,UAAUC,UAAU,EAAG,MAClC,oCAAM3J,EAAM2M,cACZ,8BAEK3M,EAAM4M,OACH5M,EAAM6M,OAAOlD,UAAU,EAAG,IAE1B,oBAAGpH,UAAU,eAAe6C,MAAO,CAACD,MAAO,WAGnD,8BAEKnF,EAAM8M,YACH9M,EAAM+M,YAAYpD,UAAU,EAAG,IAE/B,oBAAGpH,UAAU,eAAe6C,MAAO,CAACD,MAAO,WAGnD,8BAEI,eAAC,iBAAD,CAAenB,GAAE,iBAAYhE,EAAM0F,KAAnC,SACI,eAAClD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAzBHvC,EAAM0F,iBCG5ByN,GAjCH,WACV,OACE,gBAAC,iBAAD,WACA,eAAC,GAAD,IACA,uBAAM5Q,UAAU,OAAhB,SACE,gBAACwB,GAAA,EAAD,WACE,eAAC,KAAD,CAAOqP,KAAK,aAAaC,UAAWvE,KACpC,eAAC,KAAD,CAAOsE,KAAK,YAAYC,UAAWhG,KACnC,eAAC,KAAD,CAAO+F,KAAK,WAAWC,UAAWtF,KAClC,eAAC,KAAD,CAAOqF,KAAK,cAAcC,UAAWjF,KACrC,eAAC,KAAD,CAAOgF,KAAK,SAASC,UAAWjI,KAChC,eAAC,KAAD,CAAOgI,KAAK,YAAYC,UAAW1H,KACnC,eAAC,KAAD,CAAOyH,KAAK,WAAWC,UAAWpH,KAClC,eAAC,KAAD,CAAOmH,KAAK,eAAeC,UAAWzK,KACtC,eAAC,KAAD,CAAOwK,KAAK,aAAaC,UAAWhJ,KACpC,eAAC,KAAD,CAAO+I,KAAK,kBAAkBC,UAAW5C,KACzC,eAAC,KAAD,CAAO2C,KAAK,uBAAuBC,UAAWtC,KAE9C,eAAC,KAAD,CAAOqC,KAAK,qBAAqBC,UAAW/B,GAAmBgC,OAAK,IACpE,eAAC,KAAD,CAAOF,KAAK,iCAAiCC,UAAW/B,GAAmBgC,OAAK,IAChF,eAAC,KAAD,CAAOF,KAAK,0BAA0BC,UAAWrB,KACjD,eAAC,KAAD,CAAOoB,KAAK,mBAAmBC,UAAWH,KAC1C,eAAC,KAAD,CAAOE,KAAK,mBAAmBC,UAAWhL,GAAYiL,OAAK,IAC3D,eAAC,KAAD,CAAOF,KAAK,oBAAoBC,UAAWhL,GAAYiL,OAAK,IAC5D,eAAC,KAAD,CAAOF,KAAK,oCAAoCC,UAAWhL,GAAYiL,OAAK,IAC5E,eAAC,KAAD,CAAOF,KAAK,IAAIC,UAAWhL,GAAYiL,OAAK,SAGhD,eAAC,GAAD,QCtCWC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAAS3P,OACP,eAAC,IAAD,CAAUpD,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFwO,SAASwE,eAAe,SAM1BV,M","file":"static/js/main.d93c8e28.chunk.js","sourcesContent":["// Ctrl+D to select all\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCSESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCSESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCSESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCSESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCSESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCSESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCSESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","// Any new reducer should be added to the store\r\n// Separate reducers make it easier to debug\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n  productListReducer, \r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n  userLoginReducer, \r\n  userRegisterReducer, \r\n  userDetailsReducer, \r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport { \r\n  orderCreateReducer, \r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducers\"\r\n\r\nconst reducer = combineReducers({\r\n    // Product Reducers\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    // Cart Reducers\r\n    cart: cartReducer,\r\n    // User Reducers\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    // Order Reducers\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n      cartItems: cartItemsFromStorage,\r\n      shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n\r\n","import { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\n// Product List Reducer\r\n// Reducer takes a state (empty object) and an action\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Set a singular product to an empty object, set reviews to an empty array\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            // Use spread operator ... to add whatever else is in the current state\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Nothing is returned from the server on delete\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload  }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            //return { loading: false, success: true }\r\n            return { loading: false, success: true, product: action.payload  }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n } from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} }, \r\n    action\r\n) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            // Check if item already exists in the cart\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return { \r\n                    ...state.cartItems,\r\n                    // Map through the current cart items, if item exist, return id\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else { \r\n                // If an item doesn't exist in a cart, push to an array\r\n                return {\r\n                    ...state,\r\n                    // Array of current items, plus a new item\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                // Data passed in from the form\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                // Data passed in from the form\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n// User Login Reducer\r\n// Reducer takes a state (empty object) and an action\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        // Video 91 Bug Fixes    \r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} }, \r\n    action\r\n) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { \r\n                ...state,\r\n                loading: true \r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    // Use switch to evaluate type in the action object\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { \r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                orders: action.payload \r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return { \r\n                loading: false, \r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n// Render prop??\r\nconst SearchBox = ({ history }) => {\r\n    // Define component level state\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Trim white space\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    //USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // Make a request\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    // Remove user info from local storage\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        // Make a request\r\n        const { data } = await axios.post(\r\n            '/api/users', \r\n            { name, email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// id = profile\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_DETAILS_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/profile',\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n        // Video 91 Bug Fixes\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/users', config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_LIST_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_DELETE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        // Pass an updated user to the state\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n    <header>\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand >ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Route render={({ history }) => <SearchBox history={history}/>} />\r\n                <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link ><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>\r\n                                    Profile\r\n                                </NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>\r\n                                Logout\r\n                            </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    ) : ( \r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>\r\n                                <i className='fas fa-user'></i>Sign In\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    )}\r\n                    {userInfo && userInfo.isAdmin && (\r\n                        <NavDropdown title='Admin' id='adminmenu'>\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                        </NavDropdown>\r\n                    )}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Proshop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                  className={\r\n                    value >= 1 \r\n                      ? 'fas fa-star' \r\n                      : value >= 0.5 \r\n                      ? 'fas fa-star-half-alt' \r\n                      : 'far fa-star'\r\n                  }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                  className={\r\n                    value >= 2 \r\n                      ? 'fas fa-star' \r\n                      : value >= 1.5 \r\n                      ? 'fas fa-star-half-alt' \r\n                      : 'far fa-star'\r\n                  }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                  className={\r\n                    value >= 3 \r\n                      ? 'fas fa-star' \r\n                      : value >= 2.5 \r\n                      ? 'fas fa-star-half-alt' \r\n                      : 'far fa-star'\r\n                  }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                  className={\r\n                    value >= 4 \r\n                      ? 'fas fa-star' \r\n                      : value >= 3.5 \r\n                      ? 'fas fa-star-half-alt' \r\n                      : 'far fa-star'\r\n                  }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                  className={\r\n                    value >= 5 \r\n                      ? 'fas fa-star' \r\n                      : value >= 4.5 \r\n                      ? 'fas fa-star-half-alt' \r\n                      : 'far fa-star'\r\n                  }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n/*Rating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}*/\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        // Fixed Card height with embedded CSS\r\n        <Card className='my-3 p-3 rounded' style={{ minHeight: \"410px\", maxHeight: \"410px\" }}>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating \r\n                        value={product.rating} \r\n                        text={`${product.numReviews} reviews`} \r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n                \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n          animation='border' \r\n          role='status' \r\n          style={{ \r\n              width: '100px', \r\n              height: '100px', \r\n              margin: 'auto',\r\n              display: 'block'\r\n          }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer \r\n                key={x + 1}\r\n                to={\r\n                    !isAdmin \r\n                        ? keyword \r\n                            ? `/search/${keyword}/page/${x+1}` \r\n                            : `/page/${x + 1}` \r\n                        : `/admin/productlist/${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n           \r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n// Actions\r\n// Use redux-thunk for async requests\r\n// Pass in keyword for seacrh function\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        // Use axios\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        // Use axios\r\n        // Use back ticks `` to pass a literal \r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n        //dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        // Put into variable if message is needed\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport  { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products, } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch]) \r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover'className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' meta={description}></meta>\r\n            <meta name='keywords' meta={keywords}></meta>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Proshop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","//import React, { useState, useEffect } from 'react'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n//import axios from 'axios'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    // products - state name, setproducts - function to manipulate products\r\n    // Then pass an empty array to useState\r\n    //const [products, setProducts] = useState([])\r\n\r\n    //useEffect(() => {\r\n        //const fetchProducts = async () => {\r\n            // De-structuring allows to use data variable directly\r\n            //const { data } = await axios.get('/api/products')\r\n            //setProducts(data)\r\n        //}\r\n\r\n        //fetchProducts()\r\n        // Pass in array of dependencies to fire off side effects??\r\n    //}, [])\r\n\r\n    const keyword = match.params.keyword\r\n    // To test pagination enter localhost:3000/page/2 ...\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    // Destructure productList\r\n    const {loading, error, products, pages, page } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n        // Add dispatch as a dependency to avoid console warning\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n        <Meta />\r\n        {/*<Helmet>\r\n            <title>Welcome To Proshop</title>\r\n            <meta name='description' content='We sell the best products for cheap'></meta>\r\n            <meta name='keywords' content='electronics, buy electronics, cheap electronics'></meta>\r\n        </Helmet>*/}\r\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>GO BACK</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message> \r\n            :  \r\n            <>\r\n                <Row>\r\n                {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n                <Paginate \r\n                    pages={pages}\r\n                    page={page}\r\n                    /**If keyword exists then use keyword else use emptry string.*/\r\n                    keyword={keyword ? keyword : ''}\r\n                />\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","//import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    //const [product, setProduct] = useState([])\r\n    \r\n    // Adding quantity field, default \r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success: succesProductReview, error: errorProductReview} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        // Got rid off the code below in video 30\r\n        //const fetchProduct = async () => {\r\n            // Use props to grab product id from URL: match.params.id\r\n            //const { data } = await axios.get(`/api/products/${match.params.id}`)\r\n            //setProduct(data)\r\n        //}\r\n\r\n        //fetchProduct()\r\n\r\n        if(succesProductReview) {\r\n            // How to style alerts???\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, succesProductReview])\r\n\r\n    // Handlers\r\n    const addToCartHandler = () => {\r\n        // Redirect to cart\r\n        history.push(`/cart/${match.params.id}?qty${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating, \r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader /> \r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message> \r\n            ) : ( \r\n                <>\r\n                <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating \r\n                                        value={product.rating} \r\n                                    text={`${product.numReviews} reviews`} \r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty:</Col>\r\n                                            <Col>\r\n                                                <Form.Control \r\n                                                    as='select' \r\n                                                    value={qty} \r\n                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                >\r\n                                                    {[...Array(product.countInStock).keys()].map(\r\n                                                        (x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        )\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block' \r\n                                        type='button' \r\n                                        disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.lenghth === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant=\"flush\">\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0,10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                    <ListGroup.Item>\r\n                                        <h2>Write a Customer Review</h2>\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control \r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control \r\n                                                        as='textarea'\r\n                                                        row='3'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n\r\n                                                </Form.Group>\r\n                                                <Button \r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message>\r\n                                                Please <Link to='/login'>sign in</Link> to write a review\r\n                                            </Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </> \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_PAYMENT_METHOD, \r\n    CART_SAVE_SHIPPING_ADDRESS \r\n} from '../constants/cartConstants'\r\n\r\n// \r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    // Local storage API\r\n    // Save the entire cart\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n//import { useLocation, useParams, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    // Get product id from the URL\r\n    const productId = match.params.id\r\n    //const { id: productId } = useParams()\r\n    // Get only the number from the URL\r\n    const qty = location.search ? Number(location.search.split('qty')[1]) : 1\r\n    //const qty = new URLSearchParams(useLocation().search).get('qty')\r\n    //console.log(qty)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart =  useSelector((state) => state.cart)\r\n    const { cartItems } =  cart\r\n\r\n    //console.log(cartItems)\r\n\r\n    useEffect(() => {\r\n       if(productId) {\r\n           dispatch(addToCart(productId, qty))\r\n       } \r\n       // Dependencies for the useEffect\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        // Redirect to login\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col md={8}>\r\n          <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? (\r\n              <Message>\r\n                  Your cart is empty <Link to='/'>Go Back</Link>\r\n              </Message>\r\n            ) : (\r\n              <ListGroup variant='flush'>\r\n                  {cartItems.map((item) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>${item.price}</Col>\r\n                            <Col md={2}>\r\n                                <Form.Control\r\n                                  as='select'\r\n                                  value={item.qty} \r\n                                  onChange={(e) => \r\n                                    dispatch(\r\n                                        addToCart(item.product, Number(e.target.value))\r\n                                    )\r\n                                  }\r\n                                >\r\n                                    {[...Array(item.countInStock).keys()].map(\r\n                                        (x) => (\r\n                                          <option key={x + 1} value={x + 1}>\r\n                                              {x + 1}\r\n                                          </option>\r\n                                        )\r\n                                    )}\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button\r\n                                  type='button'\r\n                                  variant='light'\r\n                                  onClick={() => removeFromCartHandler(item.product)}\r\n                                >\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        )}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup varient='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                        ${cartItems\r\n                          .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                          .toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                          type='button'\r\n                          className='btn-block'\r\n                          disabled={cartItems.length === 0}\r\n                          onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n   )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n      <Container>\r\n          <Row className='justify-content-md-center'>\r\n              <Col xs={12} md={6}>\r\n                  {children}\r\n              </Col>\r\n            </Row>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","// Form fieds are part of the component state\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    // Set up component level state\r\n    // Fields\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    // location.search has URL query string\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // Redirect if user is already logged in\r\n    useEffect(() => {\r\n        // check for user info\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    // Pass in e for the form\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        // Dispatch Login\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n      <FormContainer>\r\n          <h1>Sign In</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                  Sign In\r\n              </Button>\r\n          </Form>\r\n\r\n          <Row className='py-3'>\r\n              <Col>\r\n                New Customer?{' '}\r\n                <Link to={redirect \r\n                  ? `/register?redirect=${redirect}`\r\n                  : '/register'\r\n                  }>\r\n                      Register\r\n                </Link>\r\n              </Col>\r\n          </Row>\r\n      </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","// Form fieds are part of the component state\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    // Set up component level state\r\n    // Fields\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    // location.search has URL query string\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // Redirect if user is already logged in\r\n    useEffect(() => {\r\n        // check for user info\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    // Pass in e for the form\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        // Check password fields\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n            // How to check for empty values???\r\n        } else {\r\n            // Dispatch Register\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n      <FormContainer>\r\n          <h1>Sign Up</h1>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                  Register\r\n              </Button>\r\n          </Form>\r\n\r\n          <Row className='py-3'>\r\n              <Col>\r\n                Have an Account?{' '}\r\n                <Link to={redirect \r\n                  ? `/login?redirect=${redirect}`\r\n                  : '/login'\r\n                  }>\r\n                      Login\r\n                </Link>\r\n              </Col>\r\n          </Row>\r\n      </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    // Set up component level state\r\n    // Fields\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    // Redirect if user is already logged in\r\n    useEffect(() => {\r\n        // Check for user info\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success) {\r\n                // Video 91 Bug Fixes\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    // Pass in e for the form\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        // Check password fields\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n            // How to check for empty values???\r\n        } else {\r\n            // Dispatch Update Profile\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n          <Col md={3}>\r\n          <h2>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {/**Redo error */}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated!</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                  Update\r\n              </Button>\r\n          </Form>\r\n          </Col>\r\n          <Col md={9}>\r\n              <h2>My Orders</h2>\r\n              {loadingOrders ?\r\n                <Loader />\r\n              : errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n              : (\r\n                  <Table \r\n                    striped \r\n                    bordered \r\n                    hover \r\n                    responsive\r\n                    className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid \r\n                                            ? order.paidAt.substring(0, 10)\r\n                                            : <i className='fas fa-times' style={{color: 'red'}} />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered \r\n                                            ? order.deliveredAt.substring(0, 10)\r\n                                            : <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n              )}\r\n          </Col>\r\n      </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/orders',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_CREATE_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Content-Type is not needed for get request\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            // No need to pass the whole order object\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_PAY_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                //'Content-Type': 'application/json',\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            // No need to pass the whole order object\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n        // Get access to the logged in user object\r\n        const { userLogin: { userInfo } } = getState()\r\n        \r\n        const config = {\r\n            headers: {\r\n                // Get token with getState and pass in headers\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/orders', config)\r\n\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n        \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: ORDER_LIST_FAIL,\r\n            payload: \r\n              error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    // Use state\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    // Add state for the form\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        // Move to the next page\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                      type='text' \r\n                      placeholder='Enter address'\r\n                      value={address}\r\n                      required\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                      type='text' \r\n                      placeholder='Enter city'\r\n                      value={city}\r\n                      required\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                      type='text' \r\n                      placeholder='Enter postal code'\r\n                      value={postalCode}\r\n                      required\r\n                      onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                      type='text' \r\n                      placeholder='Enter country'\r\n                      value={country}\r\n                      required\r\n                      onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    // Use state\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    // Redirect if no shipping address\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    // Define component level state\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        // Move to the next page\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type='radio' \r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n\r\n                        <Form.Check \r\n                            type='radio' \r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                \r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Show 2 decimals\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100 ).toFixed(2)\r\n    }\r\n\r\n    // Calculate prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // Ignore the fact that order._id doesn't exist yet...\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n    \r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, \r\n                                {' '}{cart.shippingAddress.city},\r\n                                {' '}{cart.shippingAddress.postalCode},\r\n                                {' '}{cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0  \r\n                            ? <Message>Your cart is empty</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image \r\n                                                        src={item.image}\r\n                                                        alt={item.image}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>   \r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n    // A piece of state that shows SDK is ready\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    // Use : to rename an item to avoid duplicate names\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if(!loading) {\r\n        // Show 2 decimals\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100 ).toFixed(2)\r\n        }\r\n\r\n        // Calculate prices\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // Load PayPal script dynamically\r\n        const addPayPalScript = async () => {\r\n            // Fetch the Client ID from the backend\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            // Vanilla JavaScript\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async =  true\r\n            script.onload = () => {\r\n                // This line indicates that the script has been loaded\r\n                setSdkReady(true)\r\n            }\r\n            // Add script to the body\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        // 1. Check for the order, if doesn't exist load the details..\r\n        // 2. Make sure that the order ID matches the ID in the URL\r\n        // 3. If payment is successful load the order again\r\n        if(!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            // If it does not, fetch the most recent order\r\n            dispatch(getOrderDetails(orderId))\r\n            // Check if the order has been paid\r\n        } else if(!order.isPaid) {\r\n            // Check if the script has loaded\r\n            if(window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const successDeliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader /> \r\n        ) : error ? ( <Message variant='danger'>{error}</Message> \r\n        ) : ( <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, \r\n                                {' '}{order.shippingAddress.city},\r\n                                {' '}{order.shippingAddress.postalCode},\r\n                                {' '}{order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? ( \r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message> \r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>  \r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? ( \r\n                                <Message variant='success'>Paid on {order.paidAt}</Message> \r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>  \r\n                            )} \r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {/*Check length*/}\r\n                            {order.orderItems.length === 0  \r\n                            ? <Message>Order is empty</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {/*Loop*/}\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image \r\n                                                        src={item.image}\r\n                                                        alt={item.image}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>   \r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {/**Add Paypal & Mark as Delivered Buttons */}\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        >\r\n                                        </PayPalButton>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            \r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button \r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={successDeliverHandler}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    </> )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())  \r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        // Dependency array\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n      // Handler\r\n      const deleteHandler = (id) => {\r\n          // How to style this??\r\n          if(window.confirm('Are you sure?')) {\r\n              dispatch(deleteUser(id))\r\n          }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n            : (\r\n                <Table \r\n                    striped \r\n                    bordered \r\n                    hover\r\n                    responsive\r\n                    className='table-sm'\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/**Loop through the user list and display each user */}\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i className='fas fa-check' style ={{color: 'green'}}></i>\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button \r\n                                        variant='danger' \r\n                                        className='btn-sm'\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","// Form fieds are part of the component state\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    // Set up component level state\r\n    // Fields\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    // Check if the update was successful\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { \r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            // Check for user\r\n            // Match fetched ID to the ID from the URL\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    // Pass in e for the form\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading \r\n                ? <Loader /> \r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                            type='checkbox' \r\n                            label='Is Admin'\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        ></Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { \r\n        loading: loadingCreate, \r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct,\r\n     } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            // Use empty string '' for the keyword param in admin screen\r\n            dispatch(listProducts('', pageNumber))  \r\n        }\r\n        \r\n        // Dependency array\r\n    }, [\r\n        dispatch, \r\n        history, \r\n        userInfo, \r\n        successDelete, \r\n        successCreate, \r\n        createdProduct, \r\n        pageNumber\r\n    ])\r\n\r\n    // Button Handlers\r\n    const deleteHandler = (id) => {\r\n        // How to style this??\r\n        if(window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n     const createProductHandler = () => {\r\n         dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button \r\n                        className='my-3'\r\n                        onClick={createProductHandler}\r\n                    >\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n            : (\r\n                <>\r\n                    <Table \r\n                        striped \r\n                        bordered \r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/**Loop through the user list and display each user */}\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button \r\n                                            variant='danger' \r\n                                            className='btn-sm'\r\n                                            onClick={() => deleteHandler(product._id)}\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n    // Set up component level state\r\n    // Fields\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    // Check if the update was successful\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { \r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate \r\n    } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            // Check for product\r\n            // Match fetched ID to the ID from the URL\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n    \r\n    // async for HTTP request\r\n    const uploadFileHandler = async (e) => {\r\n        // e.target.files is an array, get the first item in the array\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        // Set the Spinner\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            // Make a request\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            // Set the path\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            // Never ending spinner\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    // Pass in e for the form\r\n    const submitHandler = (e) => {\r\n        // Prevent the page from refreshing\r\n        e.preventDefault()\r\n        dispatch(updateProduct({ \r\n            _id: productId, \r\n            name, \r\n            price, \r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? ( \r\n                <Loader /> \r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter image URL'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        ></Form.Control>\r\n                        <Form.File \r\n                            id='image-file'\r\n                            label='Choose File'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                        ></Form.File>\r\n                        {uploading && <Loader /> }\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control \r\n                            type='number' \r\n                            placeholder='Enter Count In Stock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control \r\n                            type='text' \r\n                            placeholder='Enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())  \r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        // Dependency array\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n            : (\r\n                <Table \r\n                    striped \r\n                    bordered \r\n                    hover\r\n                    responsive\r\n                    className='table-sm'\r\n                >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/**Loop through the order list and display each order */}\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                {/**If the order exists for a user show user name */}\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {/**Add moment to clean up the dates*/}\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {/**Add moment to clean up the dates*/}\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {/**Is removing /admin a security concern?*/}\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn=sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\n// Exported as default, so no need for curly braces\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n    <Header />\n    <main className='py-3'>\n      <Container>\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route path='/cart/:id?' component={CartScreen} />\n        <Route path='/admin/userlist' component={UserListScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        {/**What does exact do??*/}\n        <Route path='/admin/productlist' component={ProductListScreen} exact />\n        <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n        <Route path='/search/:keyword' component={HomeScreen} exact />\n        <Route path='/page/:pageNumber' component={HomeScreen} exact />\n        <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n        <Route path='/' component={HomeScreen} exact />\n      </Container>\n    </main>\n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}